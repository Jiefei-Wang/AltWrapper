% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/altWrapper-tools.R
\name{removeCachingWrapper}
\alias{removeCachingWrapper}
\title{Remove the wrapper created by R}
\usage{
removeCachingWrapper(x)
}
\arguments{
\item{x}{An altWrapper object}
}
\value{
An altWrapper object
}
\description{
This function can only be used on an altWrapper object.
The wrapper is an ALTREP object and created by R to automatically memorize
some statistics(e.g. sortness status). It can be silently added by some R functions and behaves
exactly the same as the object it wraps. This function can be called
in order to make sure the altWrapper variable \code{x} is not wrapped by a wrapper,
}
\examples{
## Define an altWrapper class
lengthFunc <- function(x) length(x)
elementFunc <- function(x, i) x[i]
setAltClass(className = "example", classType = "integer")
setAltMethod(className = "example", 
             getLength = lengthFunc,
             getElement = elementFunc)
A <- newAltrep(className = "example", x = 1L:10L)

## Wrap the variable A through an internal function
## Note that this can happenes in some R functions.
B <- .Internal(wrap_meta(A, sorted = 0L, noNA = TRUE))
.Internal(inspect(B))

## Although the variable B still behaves like the variable A
## Calling `getAltWrapperData` will show an error because the object
## is not an altWrapper
tryCatch(getAltWrapperData(B), error = function(e) message(e))

## Call `removeCachingWrapper` to remove R's wrapper
C <- removeCachingWrapper(B)
getAltWrapperData(C)

}
